<% uuid = "curarium"+SecureRandom.hex(4) %>


if(typeof(jQuery) === 'undefined' || jQuery.fn.jquery != "2.1.0"){ 
	document.write("<script type='text/javascript' src='https://code.jquery.com/jquery-2.1.0.min.js'></script>");
}

if(typeof(Kinetic) === 'undefined'){ 
	document.write("<script type='text/javascript' src='http://cdnjs.cloudflare.com/ajax/libs/kineticjs/5.0.1/kinetic.min.js'></script>");
}

if(typeof(window.curarium) === 'undefined'){ 
	document.write("<script type='text/javascript' src='http://curarium.herokuapp.com/js/curarium.js'></script>");
}


setTimeout(areWeThereYet, 100)

function areWeThereYet(){
	if (typeof(jQuery) === 'undefined' || typeof(Kinetic) === 'undefined' || typeof(window.curarium) === 'undefined'){
		setTimeout(areWeThereYet,100)
	} else {
		$(document).ready(function(){
			<%= uuid %>();
		});
	}
}
	
                                           

var <%= uuid %> = function() {
	
	var placement = $('.curarium').first();
	$(placement).removeClass('curarium');
	$(placement).attr('id', '<%= uuid %>').attr('class','annotation').css({
	  padding: 0,
	  'background-image': "url('http://curarium.herokuapp.com/assets/ajax.gif')",
	  'background-repeat': 'no-repeat',
	  'background-position': 'center'
	});
	
	
	
	var bounds = {
	  width: $(placement).width(),
	  height: $(placement).height()-50
	}
	
	var annotation = <%= raw @annotation.to_json %>;
	
	var note = $('<div>').attr('id','annotation'+annotation.id);
	var title = $("<h3>"+annotation.content.title+"</h3>").css({
	  'font-size': '12px',
	  'font-family': 'Sans Serif',
	  'margin':0,
	  height: 25
	});
	var body = $("<p>"+annotation.content.body+"</p>").css({
	  'font-size': '9px',
	  'font-family': 'Sans Serif',
	  'margin':0,
	  height: 25
	});
	
	
	$(placement).append(title).append(note).append(body);
	
	display_annotation(note, annotation.content, bounds);
	
}

function display_annotation(wrapper, content, bounds) {
	  
	if (content.width > content.height) {
	    var scale = bounds.width/content.width;
	  } else {
	    var scale = bounds.height/content.height;
	  }
	  
	  $(wrapper).parent().css({
	    width: parseInt(content.width)*scale,
	    height:parseInt(content.height)*scale+50
	  });
	  
	  stage = new Kinetic.Stage({
	    container: $(wrapper).attr('id'),
	    width: content.width*scale,
	    height: content.height*scale,
	    scale: {
	    	x: scale,
	      	y: scale
	    }
	  })
	  layer = new Kinetic.Layer()
	  stage.add(layer)
	  image = new Image()
	  image.src = content.image_url+"?width=10000&height=10000"
	  
	  
	  image.onload = function(){
	  	picture = new Kinetic.Image({
		  image: image,
		  width: content.width,
		  height: content.height,
		  crop:{
			x: content.x,
		        y: content.y,
		        width: content.width,
		        height: content.height
		  }
	  	});
	    layer.add(picture)
	    stage.draw()
	  }
	}  