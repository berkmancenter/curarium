
if(typeof(jQuery) == 'undefined'){ 
	document.write("<script type='text/javascript' src='https://code.jquery.com/jquery-2.1.0.min.js'></script>");
}

if(typeof(d3) == 'undefined'){ 
	document.write("<script type='text/javascript' src='http://d3js.org/d3.v3.min.js'></script>");
}

$(document).ready(function(){
	alert('hello!');
});

(function() {
  window.collection = {};
  window.collection.query = {};
  window.visualization = {};
  
  <%= raw("window.collection.query.type='#{params[:type]}';") if params[:type]%>
  <%= raw("window.collection.query.property='#{params[:property]}';") if params[:property]%>
  <%= raw("window.collection.query.include=#{raw(params[:include])};") if params[:include]%>
  <%= raw("window.collection.query.exclude=#{raw(params[:exclude])};") if params[:exclude]%>

  window.visualization.treemap = function(container, source) {
    var click, selected, tree;
    selected = [];
    $.getJSON(source, function(items) {
      tree(items.treemap);
      window.collection.query.length = items.length;
      return void 0;
    });
    tree = function(root) {
      var color, div, height, margin, max_value, n, node, position, treemap, width, _fn, _i, _len, _ref;
      d3.selectAll('#' + container + ' *').remove();
      max_value = 0;
      _ref = root.children;
      _fn = function(n) {
        if (max_value < n.size) {
          return max_value = n.size;
        }
      };
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        n = _ref[_i];
        _fn(n);
      }
      margin = {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
      };
      width = $('#' + container).width() - margin.left - margin.right;
      height = $('#' + container).height() - margin.top - margin.bottom;
      color = d3.scale.linear().domain([0, max_value / 8, max_value / 4, max_value / 2, max_value]).range(['#c83737', '#ff9955', '#5aa02c', '#2a7fff']);
      treemap = d3.layout.treemap().size([width, height]).value(function(d) {
        if (selected.indexOf(d.name) < 0) {
          return d.size;
        } else {
          return null;
        }
      });
      div = d3.select('#' + container).append("div").attr('id', 'chart-container').style("position", "relative").style("width", (width + margin.left + margin.right) + "px").style("height", (height + margin.top + margin.bottom) + "px").style("left", margin.left + "px").style("top", margin.top + "px");
      position = function() {
        this.style("left", function(d) {
          return d.x + "px";
        }).style("top", function(d) {
          return d.y + "px";
        }).style("width", function(d) {
          return Math.max(0, d.dx - 1) + "px";
        }).style("height", function(d) {
          return Math.max(0, d.dy - 1) + "px";
        });
        return void 0;
      };
      node = div.datum(root).selectAll(".node").data(treemap.nodes).enter().append("div").attr("class", "node").call(position).style("background", function(d) {
        if (d.size != null) {
          return color(d.size);
        }
      }).text(function(d) {
        return d.name + '(' + d.size + ')';
      }).on('click', click);
      return void 0;
    };
    click = function(e) {
      var name, query;
      query = window.collection.query;
      name = query.property + ":" + d3.select(this).data()[0].name;
      if (query.include.indexOf(name) === -1) {
        query.include.push(name);
      }
      return window.collection.generate_visualization();
    };
    return void 0;
  };

}).call(this);
